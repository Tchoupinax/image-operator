apiVersion: apps/v1
kind: Deployment
metadata:
  name: image-operator

spec:
  replicas: 1
  selector:
    matchLabels:
      kubernetes.io/name: image-operator
  template:
    metadata:
      labels:
        kubernetes.io/name: image-operator
    spec:
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml .Values.image.pullSecrets | nindent 8 }}
      {{- end }}

      securityContext:
        runAsNonRoot: true

      containers:
      - image: "{{ .Values.image.repository }}:{{.Values.image.version}}"
        imagePullPolicy: "{{.Values.image.imagePullPolicy}}"
        name: image-operator
        command: ["/manager"]
        args:
          - "--metrics-secure=false"
          - "--metrics-bind-address=:8080"

        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - "ALL"

        ports:
        - containerPort: 8080
          name: metrics
        - containerPort: 8081
          name: health
        - containerPort: 9090
          name: graphql

        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10

        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 10m
            memory: 20Mi
        env:
          - name: "BUILDAH_PRIVILEGED_CONTAINER"
            value: "{{ .Values.config.buildah.dangerUsePrivilegedContainers }}"
          - name: "BUILDAH_IMAGE"
            value: "{{ .Values.config.buildah.image }}"
          - name: "BUILDAH_VERSION"
            value: "{{ .Values.config.buildah.version }}"
          - name: "BUILDAH_JOB_NAMESPACE"
            value: "{{ .Values.config.buildah.jobNamespace }}"
          - name: "CREDS_DESTINATION_USERNAME"
            valueFrom:
              secretKeyRef:
                name: image-operator
                key: credentialsDestinationUsername
          - name: "CREDS_DESTINATION_PASSWORD"
            valueFrom:
              secretKeyRef:
                name: image-operator
                key: credentialsDestinationPassword
          - name: "CREDS_SOURCE_USERNAME"
            valueFrom:
              secretKeyRef:
                name: image-operator
                key: credentialsSourceUsername
          - name: "CREDS_SOURCE_PASSWORD"
            valueFrom:
              secretKeyRef:
                name: image-operator
                key: credentialsSourcePassword
          - name: "DISABLE_DEST_TLS_VERIFICATION"
            value: "{{ .Values.config.destination.disabledTlsCheck }}"
          - name: "DISABLE_SRC_TLS_VERIFICATION"
            value: "{{ .Values.config.source.disabledTlsCheck }}"
          - name: "PULL_JOB_NAMESPACE"
            value: "{{ .Values.config.pullJobNamespace }}"
          - name: "SKOPEO_IMAGE"
            value: "{{ .Values.config.skopeo.image }}"
          - name: "SKOPEO_IMAGE_AWS_IRSA"
            value: "{{ .Values.config.skopeo.imageAwsIrsa }}"
          - name: "SKOPEO_VERSION"
            value: "{{ .Values.config.skopeo.version }}"
